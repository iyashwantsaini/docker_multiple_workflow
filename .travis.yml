sudo: required
language: generic
services:
  - docker

# dev docker has tests
# prod version has no tests
before_install:
  - docker build -t meyash/multiple_workflow -f ./client/DockerFile.dev ./client

script: 
  # - docker run -e CI=true meyash/multiple_workflow npm test -- --coverage
  - docker run meyash/multiple_workflow npm test -- --coverage

after_success:
  - docker build -t meyash/multiple_workflow_client -f ./client/DockerFile ./client
  - docker build -t meyash/multiple_workflow_nginx -f ./nginx/DockerFile ./nginx
  - docker build -t meyash/multiple_workflow_server -f ./server/DockerFile ./server
  - docker build -t meyash/multiple_workflow_worker -f ./worker/DockerFile ./worker
  # login to cli
  # credentials are in travis env vars
  # docker login command for travis
  # get docker_pass from travis and send it to next command
  - echo "$docker_pass" | docker login -u "$docker_id" --password-stdin
  # push these images to docker hub
  - docker push meyash/multiple_workflow_client
  - docker push meyash/multiple_workflow_nginx
  - docker push meyash/multiple_workflow_server
  - docker push meyash/multiple_workflow_worker

# deploy to aws
# deploy:
#   provider: elasticbeanstalk
#   # get this from the url for your aws app
#   # http://something-env.eba-something.us-east-1.elasticbeanstalk.com/
#   region: "us-east-1"
#   # name for your was app
#   app: "docker-workflow"
#   # env name - get from aws dashboard
#   env: "DockerWorkflow-env"
#   # get from S3 app in aws services
#   bucket_name: elasticbeanstalk-us-east-1-something
#   # use same as app name
#   bucket_path: "docker-workflow"
#   # only deplot when master branch is updated
#   on:
#     branch: master
#   access_key_id: $AWS_ACCESS_KEY
#   secret_access_key:
#     secure: "$AWS_SECRET_KEY"

# select all elastic props while creating a user in IAS

# ADD AWS_ACCESS_KEY, AWS_SECRET_KEY from aws to travis ci env variables

# iam services for user api keys
# create new user, select both programmatic access, aws mgmt console ,Add current policies > AWSElasticBeanstalkFullAccess